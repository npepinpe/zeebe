name: Tests

on:
  push:
    branches:
      - main
      - stable/*
      - release/*
      - trying
      - staging
  pull_request: {}
  workflow_dispatch: {}

jobs:
  thundra_test_initializer:
    runs-on: ubuntu-latest
    outputs:
      thundra_agent_testrun_id: ${{ steps.thundra_test_initializer.outputs.thundra_agent_testrun_id }}
    steps:
      - uses: actions/checkout@v2
      - id: thundra_test_initializer  # This ID can be anything. Must match the path for the output variable
        uses: thundra-io/thundra-test-init-action@v1
  integration-tests:
    name: Integration tests
    runs-on: "ubuntu-latest"
    needs: thundra_test_initializer
    env:
      THUNDRA_AGENT_TEST_RUN_ID: ${{ needs.thundra_test_initializer.outputs.thundra_agent_testrun_id }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3.2.0
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - name: Thundra Maven Test Instrumentation
        uses: thundra-io/thundra-maven-test-action@v1
        with:
          apikey: ${{ secrets.THUNDRA_APIKEY }}
          project_id: ${{ secrets.THUNDRA_PROJECT_ID }}
      - uses: stCarolas/setup-maven@v4.3
        with:
          maven-version: 3.8.5
      - run: mvn -T1C -B -DskipChecks -DskipTests install
      - run: docker build --build-arg DISTBALL=dist/target/camunda-zeebe-*.tar.gz --build-arg APP_ENV=dev -t camunda/zeebe:current-test .
      - run: >
          mvn -B -T2 --no-snapshot-updates
          -D junitThreadCount=12
          -D skipUTs -D skipChecks
          -D failsafe.rerunFailingTestsCount=3 -D flaky.test.reportDir=failsafe-reports
          -P parallel-tests,extract-flaky-tests
          -pl !:zeebe-elasticsearch-exporter
          verify
      - name: Foresight Test Report Uploader
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-result-junit
          path: "**/target/failsafe-reports"
      - name: Archive Test Results
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: Integration test results
          path: |
            **/target/failsafe-reports/
            **/hs_err_*.log
          retention-days: 7
  exporter-tests:
    name: Exporter tests
    runs-on: "ubuntu-latest"
    needs: thundra_test_initializer
    env:
      THUNDRA_AGENT_TEST_RUN_ID: ${{ needs.thundra_test_initializer.outputs.thundra_agent_testrun_id }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3.2.0
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - name: Thundra Maven Test Instrumentation
        uses: thundra-io/thundra-maven-test-action@v1
        with:
          apikey: ${{ secrets.THUNDRA_APIKEY }}
          project_id: ${{ secrets.THUNDRA_PROJECT_ID }}
      - uses: stCarolas/setup-maven@v4.3
        with:
          maven-version: 3.8.5
      - run: mvn -T1C -B -DskipChecks -DskipTests install
      - run: docker build --build-arg DISTBALL=dist/target/camunda-zeebe-*.tar.gz --build-arg APP_ENV=dev -t camunda/zeebe:current-test .
      - run: >
          mvn -B --no-snapshot-updates
          -D skipUTs -D skipChecks -D failsafe.rerunFailingTestsCount=3
          -pl :zeebe-elasticsearch-exporter
          verify
      - name: Archive Test Results
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: Exporter test results
          path: |
            **/target/failsafe-reports/
            **/hs_err_*.log
          retention-days: 7
      - name: Foresight Test Report Uploader
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-result-junit
          path: "**/target/failsafe-reports"
  project-list:
    # Builds a list of projects where unit tests can be run on hosted runners
    name: List projects
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: sudo apt-get -y install jq
      - uses: actions/setup-java@v3.2.0
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - name: Get Project List
        id: list-projects
        # Build a json array of module names that can be used for the matrix in `unit-tests`
        run: >
          echo "::set-output name=projects::$(mvn -pl !:zeebe-workflow-engine,!:zeebe-logstreams -Dexec.executable='echo' -Dexec.args='${project.artifactId}' exec:exec -q |  jq -cnR [inputs])"
    outputs:
      projects: ${{ steps.list-projects.outputs.projects }}
  unit-tests:
    name: Unit tests
    needs:
      - project-list
      - thundra_test_initializer
    env:
      THUNDRA_AGENT_TEST_RUN_ID: ${{ needs.thundra_test_initializer.outputs.thundra_agent_testrun_id }}
    strategy:
      fail-fast: false
      matrix:
        project: ${{ fromJson(needs.project-list.outputs.projects) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3.2.0
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - name: Thundra Maven Test Instrumentation
        uses: thundra-io/thundra-maven-test-action@v1
        with:
          apikey: ${{ secrets.THUNDRA_APIKEY }}
          project_id: ${{ secrets.THUNDRA_PROJECT_ID }}
      - run: >
          mvn -B -T1C
          -D skipTests -D skipChecks
          -am -pl :${{ matrix.project }}
          install
      - run: >
          mvn -B --no-snapshot-updates
          -D skipITs -D skipChecks
          -pl :${{ matrix.project }}
          verify
      - name: Archive Test Results
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: Unit test results for ${{ matrix.project }}
          path: |
            **/target/surefire-reports/
            **/hs_err_*.log
          retention-days: 7
      - name: Foresight Test Report Uploader
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-result-junit
          path: "**/target/surefire-reports"
  slow-unit-tests:
    name: Slow unit tests
    runs-on: "ubuntu-latest"
    needs: thundra_test_initializer
    env:
      THUNDRA_AGENT_TEST_RUN_ID: ${{ needs.thundra_test_initializer.outputs.thundra_agent_testrun_id }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3.2.0
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - name: Thundra Maven Test Instrumentation
        uses: thundra-io/thundra-maven-test-action@v1
        with:
          apikey: ${{ secrets.THUNDRA_APIKEY }}
          project_id: ${{ secrets.THUNDRA_PROJECT_ID }}
      - uses: stCarolas/setup-maven@v4.3
        with:
          maven-version: 3.8.5
      - run: >
          mvn -T1C -B
          -D skipTests -D skipChecks
          -am -pl :zeebe-workflow-engine,:zeebe-logstreams
          install
      - run: >
          mvn -B --no-snapshot-updates
          -D skipITs -D skipChecks
          -pl :zeebe-workflow-engine,:zeebe-logstreams
          verify
      - name: Archive Test Results
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: Slow unit test results
          path: |
            **/target/surefire-reports/
            **/hs_err_*.log
          retention-days: 7
      - name: Foresight Test Report Uploader
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-result-junit
          path: "**/target/surefire-reports"
  smoke-tests:
    # This name is hard-referenced from bors.toml
    # Remember to update that if this name, or the matrix.os changes
    name: Smoke tests on ${{ matrix.os }}
    timeout-minutes: 20
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]
    needs: thundra_test_initializer
    env:
      JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1
      THUNDRA_AGENT_TEST_RUN_ID: ${{ needs.thundra_test_initializer.outputs.thundra_agent_testrun_id }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3.2.0
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
      - name: Thundra Maven Test Instrumentation
        uses: thundra-io/thundra-maven-test-action@v1
        with:
          apikey: ${{ secrets.THUNDRA_APIKEY }}
          project_id: ${{ secrets.THUNDRA_PROJECT_ID }}
      - name: Build relevant modules
        run: >
          mvn -B -T1C
          -D skipTests -D skipChecks "-D maven.javadoc.skip=true"
          -am -pl qa/integration-tests
          install
      - name: Run smoke test
        run: >
          mvn -B --no-snapshot-updates
          -DskipUTs -DskipChecks
          -pl qa/integration-tests
          -P smoke-test
          verify
      - name: Archive Test Results
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: Smoke test results for ${{ matrix.os }}
          path: |
            **/target/surefire-reports/
            **/hs_err_*.log
          retention-days: 7
      - name: Foresight Test Report Uploader
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-result-junit
          path: "**/target/surefire-reports"
  go-client:
    name: Go client tests
    runs-on: ubuntu-latest
    needs: thundra_test_initializer
    env:
      THUNDRA_AGENT_TEST_RUN_ID: ${{ needs.thundra_test_initializer.outputs.thundra_agent_testrun_id }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: "1.15"
      - uses: actions/setup-java@v3.2.0
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
      - run: go get gotest.tools/gotestsum
      - run: mvn -T1C -B -DskipChecks -DskipTests install
      - run: docker build --build-arg DISTBALL=dist/target/camunda-zeebe-*.tar.gz --build-arg APP_ENV=dev -t camunda/zeebe:current-test .
      - run: gotestsum --raw-command --junitfile TEST-go.xml go test -mod=vendor -v -json ./... 2>&1
        working-directory: clients/go
      - name: Foresight Test Report Uploader
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-result-junit
          path: "clients/go/TEST-go.xml"

